db.activities.find({
	$and: [
		{name_activity: {$all: [re.compile(value1),re.compile(value2)]}},
		{type_activity: {$all: [re.compile(value1),re.compile(value2)]}},
		...,
		{
			$or:
			[
				{
					$and: 
					[
						{time: {$all: [re.compile(value1),re.compile(value2)]}},
						{work: {$all: [re.compile(value1),re.compile(value2)]}},
						{name_place: {$all: [re.compile(value1),re.compile(value2)]}}
					]
				},
				{
					map: { $all: [
                                    { "$elemMatch" : { work:{$all :[re.complie(),re.compile()]},time:{$all :[re.complie(),re.compile()]},name_place:{$all :[re.complie(),re.compile()]} } }                                  ] }
				}

			]
		}
	]
})

query mới
db.activities.find({
	$and: [
		{name_activity: {$all: [re.compile(value1),re.compile(value2)]}},
		{type_activity: {$all: [re.compile(value1),re.compile(value2)]}},
		...,
		{
			$and: [
					{
						$or:
							[
								{
									time: {$all: [re.compile(value1)]},
								},
								{
									map: { $all: [{ "$elemMatch" : { time:{$all :[re.complie(value1)]} } }                                  ] }
								}

							]
					},
					{
						$or:
							[
								{
									{time: {$all: [re.compile(value2)]}},
								},
								{
									map: { $all: [{ "$elemMatch" : { time:{$all :[re.complie(value2)]} } }                                  ] }
								}

							]
					},
					{
						$or:
							[
								{
									{works}: {$all: [re.compile(value1)]}},
								},
								{
									map: { $all: [{ "$elemMatch" : { works:{$all :[re.complie(value1)]} } }                                  ] }
								}

							]
					},
					{
						$or:
							[
								{
									{works: {$all: [re.compile(value2)]}},
								},
								{
									map: { $all: [{ "$elemMatch" : { works:{$all :[re.complie(value2)]} } }                                  ] }
								}
							]
					}
			]

		}
	]
})


trường hợp inform: Lưu thêm object chỗ fill inform slot và trả về object, lưu vào container
trường hợp matchfound: state tracker lấy current inform ra để lúc match found lấy ra object thích hợp





NOTE:
INFORM 
	chỉnh count slot value đang count cho các key chung (chưa count cho các key con)
	chỉnh fill inform slot đang fill theo key chung có count lớn nhất (chưa count cho key con)
	dbquery đã chỉnh
	count db result for slot k cần chỉnh (do đã count theo key inform)

QUY ƯỚC: 
+ các key đặc biệt giá trị của key CHUNG và key RIÊNG không được có phần giao nhau (giữa các key riêng vẫn có thể giao nhau, các hoạt động con có trùng giờ)

Requirement:
	+ câu đầu nhập vào: có 3 trường hợp:
		+ ner bắt được và intent đều không là key đặc biệt => như bình thường
		+ ner bắt được có 2 key đặc biệt trở lên, không quan tâm intent, đem bộ key đó đi query chung với nhau (thông tin chung hoặc trong object map)
		+ ner bắt được có 1 key đặc biệt, intent không là key đặc biệt => xem key đặc biệt đó là thông tin chung => như bình thường
		+ ner bắt được có 1 key đặc biệt, intent là 1 key đặc biệt khác, đem key đó đi query ở cả thông tin chung hoặc thông tin trong object map.
	
	lấy đúng 1 cặp object 1 là chung 2 là riêng (không tính lẻ hoặc 2 cặp trở lên) (nếu chỉ tồn tại 1 key đặc biệt thì tính là thông tin chung, làm đường vẫn tính là works chung, khi nào là xây mét đường đầu tiên mới là works riêng)
	+ agent inform mà dạng key đặc biệt là trả về object thỏa điều kiện và trả key đặc biệt CHUNG hoặc RIÊNG (nằm trong object) tùy vào thông tin thỏa ( vì đó là thông tin user cần confirm), key bình thường thì chỉ trả key bình thường chung không trà list gì
	+ user response lại inform:
		+Key bình thường:
			+ Làm như bth
		+Key đặc biệt:
			+ đồng ý: dựa vào object trả về HOẶC thông tin chung trả về  mà cập nhật vào điều kiện(cũ:nhận thông tin inform chung vào dkien và object vào dkien )
			+ anything: (làm theo cái cũ vì chưa chắc kết quả đầu tiên match là thông tin user cần) nhận thông tin inform là "anything" và bỏ vào thông tin chung HOẶC riêng (trong object còn trống) (không bỏ vào cả 2 do đã xác định được user hỏi chung hay riêng dựa vào kết quả trả về ban đầu, hoạt động thỏa điều kiện ban đầu)(cũ: tìm object còn trống và bỏ vào, đồng thời bỏ vào thông tin chung nếu câu đầu tiên nhập vào ner có ít nhất 2 key đặc biệt hoặc 1 key đặc biệt nhưng intent cũng là key đặc biệt khác, còn không thì bỏ vào thông tin chung)
			+ từ chối hoặc chỉ nhận 1 thông tin inform (câu nhập): (làm theo cái cũ vì chưa chắc kết quả đầu tiên match là thông tin user cần) nhận thông tin inform và bỏ vào thông tin chung HOẶC riêng (trong object còn trống) (không bỏ vào cả 2 do đã xác định được user hỏi chung hay riêng dựa vào kết quả trả về ban đầu, hoạt động thỏa điều kiện ban đầu) (cũ: tìm object còn trống và bỏ vào, đồng thời bỏ vào thông tin chung nếu câu đầu tiên nhập vào ner có ít nhất 2 key đặc biệt hoặc 1 key đặc biệt nhưng intent cũng là key đặc biệt khác, còn không thì bỏ vào thông tin chung)
	+ user response lại request:
		+ Key bình thường:
			+ Làm như bth
		+ Key đặc biệt:
			+ anything: (làm theo cái cũ vì chưa chắc kết quả đầu tiên match là thông tin user cần) nhận thông tin inform là "anything" và bỏ vào thông tin chung HOẶC riêng (trong object còn trống) (không bỏ vào cả 2 do đã xác định được user hỏi chung hay riêng dựa vào kết quả trả về ban đầu, hoạt động thỏa điều kiện ban đầu)(cũ: tìm object còn trống và bỏ vào, đồng thời bỏ vào thông tin chung nếu câu đầu tiên nhập vào ner có ít nhất 2 key đặc biệt hoặc 1 key đặc biệt nhưng intent cũng là key đặc biệt khác, còn không thì bỏ vào thông tin chung)
			+ nhận 1 thông tin inform (câu nhập): (làm theo cái cũ vì chưa chắc kết quả đầu tiên match là thông tin user cần) nhận thông tin inform và bỏ vào thông tin chung HOẶC riêng (trong object còn trống) (không bỏ vào cả 2 do đã xác định được user hỏi chung hay riêng dựa vào kết quả trả về ban đầu, hoạt động thỏa điều kiện ban đầu)(cũ: tìm object còn trống và bỏ vào, đồng thời bỏ vào thông tin chung nếu câu đầu tiên nhập vào ner có ít nhất 2 key đặc biệt hoặc 1 key đặc biệt nhưng intent cũng là key đặc biệt khác, còn không thì bỏ vào thông tin chungP
	+ Agent trả kết quả:
		+ Matchfound: 
			+ Key bình thường: trả key bình thường và các object thỏa điều kiện + bài đăng
			+ Key dac biet: trả key đặc biệt (chỉ nằm trong object hoặc nằm ngoài) và các object thỏa điều kiện + bài đăng
		+ Trả lời confirm:
			+ Key bình thường: so với key bình thường và kết luận
			+ Key đặc biệt: so với key đặc biệt được trả về và kết luận


implement idea: 
	+ Lúc cập nhật slot của các key đặc biệt (ví dụ ner bắt được 2 key là "works", "name_place"), thì phải cập nhật 2 slot còn lại (address, time) với giá trị '' để các object không bị lệch index, tuy nhiên lúc cập nhật vào ma trận current_slots_rep sẽ không cập nhật các key đó nếu các value trong các key đó toàn là ''. (lưu ý nếu là list rỗng thì vẫn tính)
	+ lúc agent action là inform (inform key chung và các object thỏa điều kiện) thì trong ma trận agent_inform_slots_rep trong state  tính luôn các key của các object thỏa điều kiện 
	+ current_request_slots giữ nguyên do request lúc nào cũng chỉ 1 thông tin .
	+ Chỗ convertregextoconstraint không cần phân biệt câu đầu tiên hay câu quá trình hội thoại, chỉ cần viết thêm 1 module lọc ra các key nào nằm ở cả key chung và trong object và đem các key đó đi query CÙNG NHAU ở ngoài và trong, 
	còn lại query theo ở ngoài
	+ get_db_results KHÔNG cần sửa vì nó chỉ có chức năng lấy kết quả từ convertregextoconstraint
	+ get_db_results_for_slots: viết 1 module để với mỗi key thì chỉ current inform còn các giá trị của chỉ key đó 
	(ví dụ current inform có time, works ở ngoài và trong thì khi xét time chỉ xét time ở ngoài và trong, bỏ hết các giá trị 
	của key works), còn với các key 
	bình thường thì làm như bình thường (key:value)
	+ _count_slot_values: đối với các key bình thường thì đếm các value của từng key bình thường, còn đối với các key đặc biệt 
	thì viết 1 module lấy current_inform ra, từ đó lấy ra được giá trị mà đi chung với điều kiện các key đặc biệt trong current inform rồi mới đếm
	(ví dụ dùng key works, name_place trong current_inform để xác định value của key time đi chung với works, name_place trong 
	current_inform, sau đó đếm sự xuất hiện của từng value trong db_subdict) 
	(cũ: viết 1 module để collect các giá trị trong các object và key chung thành 1 list dài (set lại) rồi đếm (đối với các key đặc biệt),
	đối với key chung thì chỉ đếm giá trị đơn (vde: value được trả về sẽ bao gồm key ngoài và trong, không đúng với mong muốn))
	+ fill_inform_slot: lấy kết quả VALUE có count max từ _count_slot_values, sau đó search lại trong db_results lấy giá trị đầu
	tiên có value giống với VALUE có count max và trả về các object cũng như value max đó về
	+ update_state_agent trường hợp inform, nhận thông tin inform chung hoặc riêng vào dkien và object vào dkien 
	+ update_state_agent trường hợp matchfound, lấy key là kết quả đầu tiên của danh sách các hoạt động thỏa điều kiện, value là list các hoạt động thỏa dkien,
	current_inform có key "activity" có giá trị là id của bài đăng đầu tiên thỏa trong db_results (không cần sửa)
	+ response_craft: trường hợp agent inform, bổ sung thêm response thêm các object thỏa điều kiện (chỉ cần lấy ra từ trong agent action), lúc confirm chỉ cần 
	so giá trị của confirm obj với inform_value trong agent action đã được fill
	+ agent_action['intent'] == 'inform' trong state tracker bổ sung thêm 1 key 'list_match_obj' vào agent action
	+ response_craft: trường hợp agent matchfound, lúc lấy ra kết quả đầu tiên thỏa thì get lại current_inform từ state tracker để tìm các list match obj 
	thỏa điều kiện, đồng thời response lại câu cho user luôn (không giống với inform chỉ cần lấy ra và response câu), inform value mà phải trả về cho user bây giờ
	phải viết 1 module sử dụng current_inform để tìm ra value cần inform cho user, lúc confirm thì so value này với confirm_obj và kết luận
	+ problem: update_state_agent đã append vào điều kiện rồi nhưng update_state_user lại append thêm phát nữa, tìm cách check đã tồn tại value trong điều kiện 
	rồi để khỏi append

	+ problem: tìm cách dựa vào current inform để lấy ra value inform phù hợp trong trường hợp matchfound (không thể dùng first user action)


STATUS:
+ đang implement update_state_user, thiếu trường hợp cập nhật key riêng lẻ vào current inform 